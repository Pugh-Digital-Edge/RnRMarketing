---
import BaseLayout from "src/layouts/BaseLayout.astro";
import services from '@data/serviceData.json';
import industries from '@data/industryData.json';
import Articles from "@components/Articles.astro";
import Contact from "@components/Contact.astro";
import Landing from "@components/Landing.astro";

export async function getStaticPaths() {
  const paths = services.flatMap(service =>
    industries.map(industry => ({
      params: { service: service.Name, industry: industry.Name },  // Use `service` and `industry` keys here
    }))
  );

  return paths;  // Return as an object with `paths` key
}

// Access route parameters directly from `Astro.params`
const { service, industry } = Astro.params;  // Use `service` and `industry`
console.log("Astro.params:", Astro.params);

const selectedService = services.find(s => s.Name === service);
const selectedIndustry = industries.find(l => l.Name === industry);

if (!selectedService || !selectedIndustry) {
  throw new Error("Service or industry not found: " + service + " " + industry);
}

// Optimize landing image if necessary
import { getOptimizedImage } from "@libs/utils";
import landingImage from "@assets/images/landing.jpg"; // Path to preload asset in src
const optimizedImage = await getOptimizedImage(landingImage);
---

<BaseLayout
  title={`${selectedService.FormalName} for ${selectedIndustry.FormalName}`}
  description={`Specialized ${selectedService.FormalName} services designed specifically for ${selectedIndustry.FormalName} companies. Drive more emergency restoration leads and grow your ${selectedIndustry.Name} business.`}
  preloadedImage={optimizedImage}
>
<Landing 
    title={`${selectedService.FormalName} for ${selectedIndustry.FormalName}`}
    image={optimizedImage}
/>

<!-- ============================================ -->
<!--           Primary Service Section            -->
<!-- ============================================ -->

<section id="RTsbs-1365">
    <div class="cs-container">
        <div class="cs-image-group">
            <picture class="cs-background">
                <source media="(max-width: 600px)" srcset={`/assets/images${selectedService.ImagePath}-m.webp`} />
                <source media="(min-width: 601px)" srcset={`/assets/images${selectedService.ImagePath}.webp`} />
                <img loading="lazy" decoding="async" src={`/assets/images${selectedService.ImagePath}.webp`} alt={`${selectedService.FormalName} for ${selectedIndustry.FormalName}`} width="690" height="690">
            </picture>
        </div>
        <div class="cs-content">
            <span class="cs-topper">{selectedIndustry.FormalName} EXPERTS</span>
            <h2 class="cs-title">{selectedService.Title1}</h2>
            <p class="cs-text">
                {selectedIndustry.Description}
            </p>
            <p class="cs-text">
                <div set:html={selectedService.Description1}></div>
            </p>           
            <a href="/contact" class="cs-button-solid">Schedule Your Strategy Call</a>
        </div>
    </div>
    <div class="cs-bubbles" aria-hidden="true"></div>
</section>

<!-- ============================================ -->
<!--            Industry-Specific Benefits        -->
<!-- ============================================ -->

<section id="RTsbsr-1365">
    <div class="cs-container">
        <div class="cs-image-group">
            <picture class="cs-background">
                <source media="(max-width: 600px)" srcset={`/assets/images${selectedIndustry.ImagePath}-m.webp`} />
                <source media="(min-width: 601px)" srcset={`/assets/images${selectedIndustry.ImagePath}.webp`} />
                <img loading="lazy" decoding="async" src={`/assets/images${selectedIndustry.ImagePath}.webp`} alt={`${selectedService.FormalName} Benefits for ${selectedIndustry.FormalName}`} width="690" height="690">
            </picture>
        </div>
        <div class="cs-content">
            <span class="cs-topper">SPECIALIZED SOLUTIONS</span>
            <h2 class="cs-title">{selectedService.Title2}</h2>
            <p class="cs-text">
                <div set:html={selectedService.Description2}></div>
            </p>   
            
            <ul class="cs-ul">
                <li class="cs-li">
                    <span class="cs-header">24/7 Emergency Focus</span>
                    <p>Capture urgent {selectedIndustry.Name} calls when property owners need immediate help</p>
                </li>
                <li class="cs-li">
                    <span class="cs-header">Industry Expertise</span>
                    <p>Specialized {selectedService.FormalName} strategies for {selectedIndustry.Name} companies</p>
                </li>
                <li class="cs-li">
                    <span class="cs-header">Quality Lead Generation</span>
                    <p>Target property owners and insurance partners, not unqualified leads</p>
                </li>
            </ul>
            
            <a href="/case-studies" class="cs-button-solid">Learn More</a>
        </div>
    </div>
    <div class="cs-bubbles" aria-hidden="true"></div>
</section>

<!-- ============================================ -->
<!--            Complete Solution                 -->
<!-- ============================================ -->

<section id="RTsbst-1365">
    <div class="cs-container">
        <div class="cs-image-group">
            <picture class="cs-background">
                <source media="(max-width: 600px)" srcset={`/assets/images${selectedService.ImagePath2}-m.webp`} />
                <source media="(min-width: 601px)" srcset={`/assets/images${selectedService.ImagePath2}.webp`} />
                <img loading="lazy" decoding="async" src={`/assets/images${selectedService.ImagePath2}.webp`} alt={`Complete ${selectedService.FormalName} Solution`} width="690" height="690">
            </picture>
        </div>
        <div class="cs-content">
            <span class="cs-topper">COMPLETE SOLUTION</span>
            <h2 class="cs-title">Get More {selectedIndustry.FormalName} Jobs</h2>
            <p class="cs-text">
                Our comprehensive {selectedService.FormalName} solution is designed specifically for {selectedIndustry.Name} companies. We understand the unique challenges of marketing emergency restoration services and have developed proven strategies to help you:
            </p>            
            
            <ul class="cs-ul">
                <li class="cs-li">Capture more emergency calls</li>
                <li class="cs-li">Build relationships with insurance partners</li>
                <li class="cs-li">Establish local market authority</li>
                <li class="cs-li">Track and improve marketing ROI</li>
            </ul>

            <a href="/contact" class="cs-button-solid">Book Your Strategy Call</a>
        </div>
    </div>
    <div class="cs-bubbles" aria-hidden="true"></div>
</section>

<CTA />

<Articles />
<Contact />
</BaseLayout>
<style lang="less">
    /*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    @keyframes floatAnimation {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-2rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    @keyframes floatAnimation2 {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-3rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    #RTsbs-1365,
    #RTsbsr-1365,
    #RTsbst-1365 {
        padding: var(--sectionPadding);
        position: relative;
        overflow: hidden;
        z-index: 1;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (584/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (630/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-topper {
            color: #767676;
        }

        .cs-title {
            /* 23 characters wide including spaces */
            max-width: 26ch;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (24/16rem);
            }
        }

        .cs-card-group {
            width: 100%;
            max-width: (630/16rem);
            margin: 0 0 (24/16rem) 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(15.625rem, 1fr));
            align-items: center;
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            /* 16px - 24px */
            padding: clamp(1rem, 3vw, 1.5rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: #f7f7f7;
            border-radius: (16/16rem);
            border: 1px solid #e8e8e8;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (12/16rem);
        }

        .cs-h3 {
            font-size: (20/16rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0;
            color: var(--headerColor);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: (8/16rem);
        }

        .cs-h3-icon {
            width: (32/16rem);
            height: auto;
            display: block;
        }

        .cs-item-text {
            font-size: (14/16rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-ul {
            width: 100%;
            margin: 0 0 (24/16rem) 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (12/16rem);
        }

        .cs-li {
            font-size: var(--bodyFontSize);
            list-style: none;
            line-height: 1.5em;
            width: 100%;
            color: var(--bodyTextColor);
            display: flex;
            justify-content: flex-start;
            /* push icon top the top so if the list item goes to two lines the icon stays at the top */
            align-items: flex-start;
            gap: (8/16rem);
        }

        .cs-icon {
            width: (24/16rem);
            height: auto;
            /* adds extra space between the icon and top of parent so it's more centered */
            margin-top: 1px;
            display: block;
        }

        .cs-button-solid {
            font-size: (16/16rem);
            line-height: (56/16rem);
            text-decoration: none;
            font-weight: 700;
            overflow: hidden;
            margin: 0;
            color: #fff;
            padding: 0 (48/16rem);
            border-radius: (30/16rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            transition: color 0.3s;

            &:before {
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 0%;
                background: #1a1a1a;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                color: var(--primary);
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-image-group {
            width: 100%;
            max-width: (586/16rem);
            /* Changes to auto at desktop */
            height: (520/16rem);
            /* 32px - 48px */
            border-radius: clamp(2rem, 4vw, 3rem);
            /* clips the corners of the children around the border radius */
            overflow: hidden;
            position: relative;
        }

        .cs-background {
            width: 100%;
            height: 100%;
            /* makes it cover the parent dimensions */
            object-fit: cover;
            display: block;

            img {
                width: 100%;
                height: 100%;
                /* makes it cover the parent like a backgorund image */
                object-fit: cover;
                display: block;
            }
        }

        .cs-box {
            text-align: left;
            width: 100%;
            max-width: (304/16rem);
            padding: (32/16rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: var(--primary);
            /* 48px - 80px */
            border-radius: (32/16rem);
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (24/16rem);
            position: absolute;
            /* 12px - 20px */
            right: clamp(0.75rem, 1.9vw, 1.5rem);
            /* 12px - 20px */
            bottom: clamp(0.75rem, 1.9vw, 1.5rem);
        }

        .cs-box-icon {
            width: (60/16rem);
            height: auto;
            display: block;
        }

        .cs-desc {
            font-size: (20/16rem);
            line-height: 1.2em;
            text-align: inherit;
            font-weight: 700;
            width: 100%;
            margin: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-bubbles {
            font-size: ~"min(2.5vw, .7em)";
            width: (419/16em);
            height: (427/16em);
            position: absolute;
            /* changes to 160px at larger desktop */
            right: (-260/16em);
            /* changes to 30px at large desktop */
            bottom: (-50/16em);
            z-index: -1;

            &:before {
                /* white border bubble */
                content: "";
                width: (330/16em);
                height: (330/16em);
                background: transparent;
                border: 1px solid #1a1a1a;
                border-radius: 50%;
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                right: 0;
                animation-name: floatAnimation;
                animation-duration: 5s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }

            &:after {
                /* orange bubble */
                content: "";
                width: (260/16em);
                height: (260/16em);
                background: var(--primary);
                opacity: 0.15;
                border-radius: 50%;
                display: block;
                position: absolute;
                bottom: 0;
                left: 0;
                z-index: -1;
                animation-name: floatAnimation2;
                animation-duration: 14s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #RTsbs-1365,
    #RTsbsr-1365,
    #RTsbst-1365 {
        .cs-container {
            max-width: (1280/16rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
        }

        .cs-content {
            align-self: center;
        }

        .cs-image-group {
            min-height: (600/16rem);
            height: auto;
        }

        .cs-bubbles {
            font-size: ~"min(2.5vw, 1em)";
        }
    }
}

/* Large Desktop 1600px */
@media only screen and (min-width: 100rem) {
    #RTsbs-1365,
    #RTsbsr-1365,
    #RTsbst-1365 {
        .cs-bubbles {
            margin-left: (650/16rem);
            right: auto;
            left: 50%;
            bottom: (30/16rem);
        }
    }
}

/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RTsbsr-1365 {
        background-color: #f7f7f7;

        .cs-item {
            background-color: #fff;
        }

        .cs-image-group {
            /* sends it to the right in the 2nd position */
            order: 2;
        }
    }
}

/* Large Desktop 1600px */
@media only screen and (min-width: 100rem) {
    #RTsbsr-1365 {
        .cs-box {
            /* 12px - 20px */
            left: clamp(0.75rem, 1.9vw, 1.5rem);
            right: auto;
        }

        .cs-bubbles {
            margin-right: (750/16rem);
            left: auto;
            right: 50%;
            bottom: (30/16rem);
        }
    }
}
                                
</style>